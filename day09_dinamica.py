# -*- coding: utf-8 -*-
"""day09-dinamica.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MMgF2jcPq540-8LxkWYizj1O_PYM6G4B
"""

import pandas as pd
import numpy as np

pd.options.display.float_format = '{:.3f}'.format

items = pd.read_csv('DNC_order_items_dataset.csv')
reviews = pd.read_csv('DNC_order_reviews_dataset.csv')
orders = pd.read_csv('DNC_orders_dataset.csv')
products = pd.read_csv('DNC_products_dataset.csv')

lista = [items, reviews, orders, products]
for df in lista:
  df.drop(columns = df.columns[0], inplace = True)

reviews.head()

items.head()

orders.head()

products.head()

reviews.isna().sum()

reviews.groupby(by='order_id') \
.agg({'review_score':'sum'}) \
.sort_values('review_score', ascending = False)

items.head()

df = pd.merge(left=reviews , right=items , on = 'order_id', how='left')
df.head()

print(f'Shape left: {reviews.shape[0]}. Shape right: {items.shape[0]}. Shape depois do merge: {df.shape[0]}')

melhores_avaliados = df.groupby(by='product_id', as_index = False) \
.agg({'review_score':'mean'}) \
.sort_values('review_score', ascending = False)
melhores_avaliados = melhores_avaliados.head(1000)

melhores_categorias = melhores_avaliados.merge(products, on='product_id', how='left')
melhores_categorias.head()

melhores_categorias = melhores_categorias[['product_id',	'review_score',	'product_category_name']]
melhores_categorias = melhores_categorias.groupby(by='product_category_name', as_index = False) \
.agg({'review_score':'mean', 'product_id' : 'nunique'}) \
.rename(columns = {'product_id':'Qtde SKUs'}) \
.sort_values('review_score', ascending = False)

melhores_categorias

compras = orders.merge(items, on='order_id', how='left')
compras = compras.merge(reviews, on='order_id', how='left')
compras = compras.merge(products, on='product_id', how='left')
compras.head()

cols = compras.columns.to_list()
cols = cols[0:9]
cols
compras = compras[cols]

compras['order_status'].value_counts()

compras[(compras['order_status'] == 'delivered') & (compras['review_score'].isnull())]

compras = compras[compras['order_status'] == 'delivered']

gf = compras.groupby(by='product_id', as_index=False) \
.agg({'review_score':'mean'}) \
.rename(columns={'review_score':'Score_medio'})
compras = compras.merge(gf, on='product_id', how='left')
compras.head()

compras[compras['review_score'].isnull()]

compras["review_score"] = compras["review_score"].fillna(compras["Score_medio"])
nao_avaliados = compras[compras['review_score'].isnull()]
compras = compras[~compras['review_score'].isnull()]

mais_populares = compras.groupby('product_id', as_index=False) \
.agg('count') \
.sort_values('order_id', ascending = False)

mais_populares = mais_populares[mais_populares.columns[0:2]] \
.rename(columns={'order_id':'qtde_vendida'}) \
.merge(products[['product_id', 'product_category_name']], on='product_id', how='left')
mais_populares = mais_populares.head(1000)

melhores_clientes = compras.groupby('customer_id', as_index=False) \
.agg('count') \
.sort_values('order_id', ascending = False)

melhores_clientes = melhores_clientes[melhores_clientes.columns[0:2]] \
.rename(columns={'order_id':'qtde_compras'})
melhores_clientes = melhores_clientes.head(1000)

amostra = compras[compras['product_id'].isin(mais_populares['product_id'])]
amostra.shape[0]

matriz = amostra[['product_id', 'customer_id', 'review_score']] \
.pivot_table(index="customer_id", columns="product_id", values="review_score").fillna(0)

from sklearn.metrics.pairwise import cosine_similarity
import random

matriz_similaridade_produto = cosine_similarity(matriz.T)

mais_populares.head()

c = matriz.columns.tolist()

matriz_similaridade_produto = pd.DataFrame(matriz_similaridade_produto, index=c, columns = c)

matriz_similaridade_produto

index = matriz_similaridade_produto.loc['014a8a503291921f7b004a5215bb3c36']
index.sort_values(ascending=False)[1:]